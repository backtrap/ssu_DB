목차
 1.1 데이터 베이스
 1.2 데이터 추상화 및 데이터 모델
 1.3 데이터베이스 시스템


 * 데이터베이스
서로 연관 있는 데이터의 모임

데이터 용량이 방대하여 주기억장치에는 저장이 불가능하여
이차 저장 장치인 하드 디스크(또는 플래시 메모리)에 저장되어야 하는 데이터


 * 대용량 데이터
주기억 장치에 데이터 모두가 저장할 수 없을 정도의 크기를 가진 데이터


 * 데이터베이스 분야
대용량 데이터에 대한 저장, 관리, 운용을 다루는 분야


주기억장치에 적재되는
작은 데이터 처리 기술을 다루는 과목은 자료 구조


 * DBMS
데이터베이스 관리 시스템
사용자에게 데이터 관리에 필요한 기능을 제공

 DBMS의 기본적인 연산 기능
데이터 생성, 변경, 삭제, 접근, 조작

데이터 추상화
데이터 독립성
데이터 보호


 * DBS
데이터베이스 시스템
데이터베이스와 데이터 베이스 관리 시스템을 함께 통칭하는 용어

데이터베이스 시스템의 이점
 1. 데이터 추상화 제공
 2. 데이터 접근의 용이성 제공
 3. 데이터 중복 및 불일치성에 대한 제어 용이
 4. 데이터 무결성 제약조건 유지 용이
 5. 갱신 원자성 제공
 6. 다수 사용자의 동시성 제어
 7. 데이터 보호
 8. 데이터 백업 및 회복

 데이터 무결성 제약조건
데이터가 만족해야 하는 조건
파일 시스템 환경에서는 데이터 제약 조건 관리가 용이하지 않다.
ex) "학점은 최소값 0.0 최대값 4.5 내의 실수값이어야 한다."

 갱신 원자성 제공
갱신 연산이 부분적으로 데이터베이스에 반영되지 않는다

 다수 사용자의 동시성 제어
다수의 사용자가 동시에 동일 데이터베이스에 접근 가능


 * 파일 시스템
file systems
일반적인 운영체제의 기능 중 하나

데이터베이스 관리 시스템은 운영체제가 제공하는
파일 시스템을 활용하여 구현
효율적이지는 x

file 화일
pile 파일, 이라는 구분이 있음


 * 스키마와 인스턴스
스키마는 타입에 (클래스)
인스턴스는 변수의 값 (객체)에 대응


 * 데이터베이스 스키마
데이터베이스의 논리적 or 물리적 구조
데이터가 저장되는 공간에 대한 구조

실제 데이터 값이 스키마 형태로 저장 관리되는데
데이터의 실제 값이 '인스턴스'

인스턴스는 시간의 흐름에 따른 변경이 잦으나
스키마는 시간에 따른 변경이 적다


 * 추상화
어떤 사물에 대한 세세한 개체 (instance)로부터
중요한 개념을 분리하는 프로세스

중요하지 않은 사항을 제거하여
사람들이 문제 핵심 속성에 집중하여 문제를 해결하게 함

추상화 레벨에 따라 상세한 정도가 다르다


 * 데이터 추상화 레벨
추상화를 위한 관점 or 높이 or 레벨

 1. 물리적 레벨
 2. 논리적 레벨
 3. 뷰 레벨

동일 데이터베이스를 서로 다른 관점에서 3가지 형태로 추상화하고 있으나
한 장소에 저장되어 있는 데이터베이스의 추상화임을 기억해야 한다


 * 물리적 레벨에서의 추상화
실제 데이터 레코드가 어떻게 저장되는지를 기술

데이터 필드 길이
필드 간의 간격 길이
레크드의 전체 길이 등을 포함


 * 논리적 레벨에서의 추상화
데이터와 데이터 간의 관계

레코드
데이터 타입 등이 있다

 * 뷰 레벨에서의 추상화
사용자에게 오직 관심 있는 데이터만을 추상화

보안 상의 이유로
사용자에게 보여주지 않을 수 있음

동일한 논리적 레벨의 추상화에서
다수의 서로 다른 뷰 레벨 추상화가 가능


 * 3단계 스키마
3단계 추상화에 따른 3단계 스키마

 1. 물리적 스키마
 2. 논리적 스키마
 3. 뷰 스키마


 * 데이터 독립성
 1. 물리적 데이터 독립성
 2. 논리적 데이터 독립성

 물리적 데이터 독립성
논리적 스키마 변화 없이
물리적 스키마를 변화할 수 있는 기능

 논리적 데이터 독립성
뷰 스키마 변화 없이
논리적 스키마를 변화할 수 있는 기능

파일 시스템은 데이터 독립성을 제공하기 어렵다


 * 뷰 스키마
최종 사용자가 보는 데이터베이스 스키마


 * 데이터 모델
데이터 추상화를 지원하는 도구

사용자가 데이터베이스를 보는 관점을 나타낸다

데이터
데이터 관계성
데이터 의미
데이터 제약 조건을
기술하는 명세 또는 개념적인 도구

데이터 모델의 종류
 1. 관계형 데이터 모델
 2. 객체지향 데이터 모델
 3. 객체관계형 데이터 모델
 4. 네트워크 데이터 모델
 5. 계층 데이터 모델
 6. 개체-관계 데이터 모델
 7. XML 데이터 모델 등


 * 레거시 시스템
구 시스템
legacy


 * 관계 예제
일반적인 테이블 형식의 데이터 모델

관계형 데이터 모델의 기본 요소인 관계 (relation)의 예


 * 객체 관계형 데이터 모델
관계형 데이터 모델을 기반으로
객체지향 요소를 부분적으로 도입한 것

가장 인기 있는 데이터 모델


 * XML
문서 교환을 위한 표준 기술
원래는 문서 마크업 언어로 개발된 웹 관련 기술


 * 데이터베이스 설계
데이터베이스 구조를 설계하는 작업
사용자의 요구사항을 분석하여
요구사항을 충족하는 스키마를 생성

 1. 논리적 설계
 2. 물리적 설계

한번 생성된 스키마는 변경이 용이하지 않다


 * ER 데이터 모델
Entity-Relationship 데이터 모델
데이터베이스 설계 방식 중 가장 널리 사용되는 방식

 1. Entity Relationship Model
 2. Normalization Theory

데이터베이스로 표현하고자 하는 소세계 (mini-world)를 두 가지 요소로 표현
 1. 개체
 2. 관계성

 개체
서로 구분이 되는 것
thing, object

 관계성
개체 간의 관계
relationship

 1. 개체가 가지고 있는 속성을 기술
 2. 개체들 간의 관계성을 표현
 3. 관계성의 속성을 표현


 * 데이터베이스 언어
SQL
QUEL
관계 대수
에제 질의 등

SQL을 가장 많이 사용


 * 데이터베이스 관리 시스템
 1. 질의 처리기
 2. 저장 관리자
로 구성

 질의어 처리기
질의어 처리
권한 부여 및 철회
인증 등을 담당

 저장 관리자
데이터베이스 서버의 하단 부분
데이터 저장
검색
파일 구조
색인
트랜잭션 관리 등을 담당


 저장 관리자
데이터베이스 서버의 하단 부분
디스크에 존재하는 데이터베이스와 데이터 사전을 관리
데이터 저장
데이터 검색
파일 구조
색인
트랜 잭션 관리
등을 담당

데이터베이스 시스템은 다수의 사람이 동시에 이용

유저들은 데이터베이스 응용을 통해
데이터베이스 관리 시스템에 접근

유저
-> 어플리케이션
-> DBMS 질의어 처리기
-> DBMS 저장 관리기
-> 데이터베이스 or 메타 데이터
순서로 접근


 * 트랜잭션 관리
 1. 동시성 제어
 2. 복구 기능


 * 데이터베이스 시스템 사용자
 1. 일반 사용자
 2. 응용 프로그래머
 3. 데이터베이스 분석가

 일반 사용자
데이터베이스 응용을 이용하여
데이터를 접근 or 관리
주어진 화면 형식에 의거하여 주어진 절차대로 데이터베이스 시스템을 사용
일상생활에서 흔히 볼 수 있는 사용자

 응용 프로그래머
데이터베이스 시스템에 접근하는
응용 프로그램을 개발하는 사용자
이들이 개발된 데이터베이스 응용을 일반 사용자들이 사용


 * 데이터베이스 관리자 DBA
데이터베이스에 대한 모든 권한을 가지고 있는
데이터베이스 시스템의 슈퍼 유저 (superuser)

데이터베이스 시스템의 모든 활동을 주관
스키마 정의
저장 구조 및 접근 방법 정의
스키마 및 물리 구조 변경
데이터베이스 접근 권한 관리
제약 조건 관리
시스템 성능 관리 등


 * 데이터베이스 시스템 구조
데이터 위치에 따라
 1. 중앙집중식 데이터베이스
 2. 분산 데이터베이스
 3. 고객/서버 데이터베이스 (중간 형태)
 4. 병렬 데이터베이스 시스템

 병렬 데이터베이스 시스템
컴퓨터 병렬처리 기술을
데이터베이스 시스템에 적용한 경우


 * 데이터베이스 시스템의 역사
 1. 50, 60년대 : 파일 시스템 이용
 2. 70년대 : 네트워크 데이터 모델, 계층 데이터 모델 사용
 3. 80년대 : 관계형 모델을 지원하는 상용 데이터베이스 시스템이 처음 출시
 4. 80년대 후반 : 객체지향 데이터베이스 시스템에 대한 개념 정립
 5. 90년 중후반 :
데이터 웨어하우스 및 데이터 마이닝 연구 개발이 활발
객체 관계형 데이터 모델 정립
 6. 2000년대 :
XML 기술 출현
튜닝 및 자동 데이터베이스 관리 기술 발전
상용 데이터베이스 시스템 출현
 7. 2010년대 :
빅 데이터 시대
대용량 저장 시스템 또는 대용량 분산 처리 플랫폼이 개발
(BigTable, Pnuts, Sherpa, Hadoop, Apache 등)


 * NOSQL (Not Only SQL)
전통적인 DBMS보다는
다른 형태의 데이터 관리를 요구하는 응용 분야에 적합

기존 데이터 시스템은
ACID 트랜잭션 지원을 통한
데이터 일치성
강력한 질의어 제공
구조적 데이터 저장 및 관리를 강조

NOSQL 시스템은
통상 분산 데이터 관리 및 운영
semi-structured 데이터 저장 및 관리
고성능
유용성 (availability)
확장성 (scalability)를 강조


 * 레거시 시스템 (legacy system)
파일 시스템, 네트워크 데이터 모델, 계층 데이터 모델을 사용하는 시스템


 * 트랜잭션 (transaction)
데이터베이스 관리 시스템의 상호작용의 단위
데이터베이스의 상태를 변화시키기 위해서 수행하는 작업의 단위

논리적 작업 단위 (LUW, Logical Units of Work)
쪼갤 수 없는 업무 처리의 최소 단위

작업의 단위는 질의어 한 문장이 아니라
SELECT, INSERT, DELETE, UPDATE의 명령어를 조합한 것

하나의 거래를 안전하게 처리하도록 보장해준다
 1. 커밋 (commit)
 2. 롤백 (rollback)

 롤백
작업 중 하나라도 실패를 해서
거래 이전으로 되돌리는 것

 커밋
모든 작업이 정상적으로 성공하는 경우
데이터베이스에 정상 반영하는 것
커밋을 호출하기 전까지는 데이터를 임시로 저장하는 것이다
-> 해당 트랜잭션을 시작한 세션(사용자)에게만 변경 데이터가 보이고
	다른 세션(사용자)에게는 변경 데이터가 보이지 않는다

성공과 실패가 분명
상호 독립적
일관되고 믿을 수 있음

데이터베이스 시스템은 트랜잭션에 대해 ACID를 보장
 1. A : 원자성 (Atomicity)
 2. C : 일관성 (Consistency)
 3. I : 독립성 (Isolation)
 4. D : 영구성 (Durability)을 보장

데이터베이스가 수행된 일부 쿼리가 남지 않은 것이 중요하다
트랜잭션은 서로 간섭하지 않아야 한다


 * 쿼리 (Query)
데이터베이스에 정보를 요청하는 것
데이터베이스로부터 특정한 주제어나 어귀를 찾기 위해 사용

질의를 보내고 결과를 얻는다
사용자 -> 쿼리문 -> DB 서버
사용자 <- 결과 <- DB 서버


 * 메타 데이터
데이터에 대한 데이터
스키마, 제약 조건, 접근 권한에 관한 데이터를 말한다

메타 데이터가 있는 곳이 데이터 사전


 * 데이터 일관성 (data consistency)
각 사용자가 일관된 데이터베이스를 볼 수 있는 것
같은 시간에 조회하는 데이터는 항상 동일한 데이터임을 보장